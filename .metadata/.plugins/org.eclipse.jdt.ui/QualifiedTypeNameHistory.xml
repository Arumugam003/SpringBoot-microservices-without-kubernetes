<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<qualifiedTypeNameHistroy>
    <fullyQualifiedTypeName name="com.volley.microservices.product.repository.ProductRepository"/>
    <fullyQualifiedTypeName name="com.volley.microservices.product.repository.ProductResponse"/>
    <fullyQualifiedTypeName name="com.volley.microservices.product.ProductRequest"/>
    <fullyQualifiedTypeName name="com.volley.microservices.product.model.Product"/>
    <fullyQualifiedTypeName name="java.util.List"/>
    <fullyQualifiedTypeName name="org.springframework.stereotype.Service"/>
    <fullyQualifiedTypeName name="org.testcontainers.containers.MongoDBContainer"/>
    <fullyQualifiedTypeName name="org.junit.jupiter.api.BeforeEach"/>
    <fullyQualifiedTypeName name="org.springframework.boot.test.web.server.LocalServerPort"/>
    <fullyQualifiedTypeName name="org.springframework.boot.testcontainers.service.connection.ServiceConnection"/>
    <fullyQualifiedTypeName name="io.restassured.RestAssured"/>
    <fullyQualifiedTypeName name="com.volley.microservices.order.repository.OrderRepository"/>
    <fullyQualifiedTypeName name="com.volley.microservices.order.model.Order"/>
    <fullyQualifiedTypeName name="com.volley.microservices.order.event.OrderPlacedEvent"/>
    <fullyQualifiedTypeName name="org.springframework.retry.annotation.CircuitBreaker"/>
    <fullyQualifiedTypeName name="com.volley.microservices.order.service.OrderService"/>
    <fullyQualifiedTypeName name="com.volley.microservices.order.dto.OrderRequest"/>
    <fullyQualifiedTypeName name="lombok.extern.slf4j.Slf4j"/>
    <fullyQualifiedTypeName name="org.hamcrest.Matchers"/>
    <fullyQualifiedTypeName name="org.testcontainers.containers.MySQLContainer"/>
    <fullyQualifiedTypeName name="com.volley.microservices.product.dto.ProductRequest"/>
    <fullyQualifiedTypeName name="java.math.BigDecimal"/>
    <fullyQualifiedTypeName name="com.volley.microservices.inventory.model.Inventory"/>
    <fullyQualifiedTypeName name="com.volley.microservices.inventory.repository.InventoryRepository"/>
    <fullyQualifiedTypeName name="com.volley.microservices.inventory.service.InventoryService"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.EnableFeignClients"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.openfeign.FeignClient"/>
    <fullyQualifiedTypeName name="com.volley.microservices.order.client.InventoryClient"/>
    <fullyQualifiedTypeName name="org.springframework.web.bind.annotation.GetMapping"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.contract.wiremock.AutoConfigureWireMock"/>
    <fullyQualifiedTypeName name="com.volley.microservices.order.stubs.InventoryStubs"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.function.RouterFunction"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.function.ServerResponse"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.server.mvc.handler.GatewayRouterFunctions"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.function.RequestPredicates"/>
    <fullyQualifiedTypeName name="org.springframework.web.servlet.function.HandlerFunction"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.server.mvc.handler.HandlerFunctions"/>
    <fullyQualifiedTypeName name="org.springframework.security.web.SecurityFilterChain"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.annotation.web.builders.HttpSecurity"/>
    <fullyQualifiedTypeName name="org.springframework.security.config.Customizer"/>
    <fullyQualifiedTypeName name="org.springframework.web.service.annotation.GetExchange"/>
    <fullyQualifiedTypeName name="org.springframework.web.client.RestClient"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Configuration"/>
    <fullyQualifiedTypeName name="lombok.RequiredArgsConstructor"/>
    <fullyQualifiedTypeName name="org.springframework.context.annotation.Bean"/>
    <fullyQualifiedTypeName name="org.springframework.http.HttpStatus"/>
    <fullyQualifiedTypeName name="org.springframework.beans.factory.annotation.Value"/>
    <fullyQualifiedTypeName name="org.springframework.cloud.gateway.server.mvc.filter.CircuitBreakerFilterFunctions"/>
    <fullyQualifiedTypeName name="java.net.URI"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.circuitbreaker.annotation.CircuitBreaker"/>
    <fullyQualifiedTypeName name="io.github.resilience4j.retry.annotation.Retry"/>
    <fullyQualifiedTypeName name="org.springframework.boot.web.client.ClientHttpRequestFactorySettings"/>
    <fullyQualifiedTypeName name="java.time.Duration"/>
    <fullyQualifiedTypeName name="org.springframework.boot.web.client.ClientHttpRequestFactories"/>
    <fullyQualifiedTypeName name="org.slf4j.LoggerFactory"/>
    <fullyQualifiedTypeName name="io.micrometer.observation.ObservationRegistry"/>
</qualifiedTypeNameHistroy>
